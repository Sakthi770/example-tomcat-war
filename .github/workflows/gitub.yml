name: test1

on:
  push:
  workflow_dispatch:

jobs:
  check-github-context:
    runs-on: ubuntu-latest
    outputs:
      reviewers_json: ${{ steps.testing.outputs.reviewers_json }}
    steps:
      - name: Print repository owner login
        run: |
          echo ${{ github.event.repository.owner.login }}
          echo ${{ github.event.repository.owner }}
          echo ${{ github.repository_owner }}

      - name: Print
        run: env | sort
      - name: Dump github context
        run:   echo "$GITHUB_CONTEXT"
        shell: bash
        env:
         GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: check github context
        id: testing
        run: |
         TEAM_IDS=("12345" "67890")
         # Create the reviewers JSON array
          REVIEWERS_JSON="[]"
          for TEAM_ID in "${TEAM_IDS[@]}"; do
            REVIEWERS_JSON=$(echo "$REVIEWERS_JSON" | jq --argjson team '{"type": "Team", "id": '$TEAM_ID'}' '. += [$team]')
          done

          echo "Reviewers List: $(echo "$REVIEWERS_JSON" | jq -c)"
          echo "reviewers_json=$(echo "$REVIEWERS_JSON" | jq -c)" >> "$GITHUB_OUTPUT"

  check:
    runs-on: ubuntu-latest
    needs: check-github-context
    env:
      ENV_CREATE: '["dit", "uat", "prod"]'
    steps:
      - name: Check environments
        run: |
          REVIEWERS_JSON='${{ needs.check-github-context.outputs.reviewers_json }}'
          echo "REVIEWERS_JSON = $REVIEWERS_JSON"

          ENV_ARRAY=$(echo $ENV_CREATE | jq -r '.[]')

          for NEW_ENV in $ENV_ARRAY; do
            if [ "$NEW_ENV" == "dit" ]; then
              request_body='{}'
              is_branch_policy_required=false
            else
              is_branch_policy_required=true
              request_body=$(jq -n --argjson reviewers "$REVIEWERS_JSON" \
                '{"prevent_self_review":false,"reviewers":$reviewers,"deployment_branch_policy":{"protected_branches":false,"custom_branch_policies":true}}')
              echo "request_body=$request_body"
            fi
          done
